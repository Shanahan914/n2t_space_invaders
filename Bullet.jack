class Bullet {

    field int location; // word location of Bullet
    field boolean active;

    constructor Bullet new(int startLocation){
        let location = startLocation - 319;
        let active = true;
        do draw();
        return this;   
    }

    method void draw() {
    var int memAddress; 
        if (active) {
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 3);
        do Memory.poke(memAddress +32, 3);
        do Memory.poke(memAddress +64, 3);
        do Memory.poke(memAddress +96, 3);
        do Memory.poke(memAddress +128, 3);
        do Memory.poke(memAddress +160, 3);
        return;
}
    return;
}

   method void hide() {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress +32, 0);
        do Memory.poke(memAddress +64, 0);
        do Memory.poke(memAddress +96, 0);
        do Memory.poke(memAddress +128, 0);
        do Memory.poke(memAddress +160, 0);
        return;
}

    method void update() {
        if (active){
            do hide();
            let location = location - 32;
            if (location < 40){ let active = false;}
            do draw();
        }
        if (~active){
            do  dispose();
        }
        return;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method void isActive(){
        return active;
    }

    method void getLocation(){
        return location;
    }
}